/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.namnv.movieapp.data.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.namnv.movieapp.data.apis.AccountResourceApi
import com.namnv.movieapp.data.models.AdminUserDTO
import com.namnv.movieapp.data.models.KeyAndPasswordVM
import com.namnv.movieapp.data.models.ManagedUserVM
import com.namnv.movieapp.data.models.PasswordChangeDTO

class AccountResourceApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AccountResourceApi
        //val apiInstance = AccountResourceApi()

        // to test activateAccount
        should("test activateAccount") {
            // uncomment below to test activateAccount
            //val key : kotlin.String = key_example // kotlin.String | 
            //apiInstance.activateAccount(key)
        }

        // to test changePassword
        should("test changePassword") {
            // uncomment below to test changePassword
            //val passwordChangeDTO : PasswordChangeDTO =  // PasswordChangeDTO | 
            //apiInstance.changePassword(passwordChangeDTO)
        }

        // to test finishPasswordReset
        should("test finishPasswordReset") {
            // uncomment below to test finishPasswordReset
            //val keyAndPasswordVM : KeyAndPasswordVM =  // KeyAndPasswordVM | 
            //apiInstance.finishPasswordReset(keyAndPasswordVM)
        }

        // to test getAccount
        should("test getAccount") {
            // uncomment below to test getAccount
            //val result : AdminUserDTO = apiInstance.getAccount()
            //result shouldBe ("TODO")
        }

        // to test registerAccount
        should("test registerAccount") {
            // uncomment below to test registerAccount
            //val managedUserVM : ManagedUserVM =  // ManagedUserVM | 
            //apiInstance.registerAccount(managedUserVM)
        }

        // to test requestPasswordReset
        should("test requestPasswordReset") {
            // uncomment below to test requestPasswordReset
            //val body : kotlin.String = body_example // kotlin.String | 
            //apiInstance.requestPasswordReset(body)
        }

        // to test saveAccount
        should("test saveAccount") {
            // uncomment below to test saveAccount
            //val adminUserDTO : AdminUserDTO =  // AdminUserDTO | 
            //apiInstance.saveAccount(adminUserDTO)
        }

    }
}
