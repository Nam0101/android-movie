/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.namnv.movieapp.data.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.namnv.movieapp.data.apis.UserResourceApi
import com.namnv.movieapp.data.models.AdminUserDTO
import com.namnv.movieapp.data.models.User

class UserResourceApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UserResourceApi
        //val apiInstance = UserResourceApi()

        // to test createUser
        should("test createUser") {
            // uncomment below to test createUser
            //val adminUserDTO : AdminUserDTO =  // AdminUserDTO | 
            //val result : User = apiInstance.createUser(adminUserDTO)
            //result shouldBe ("TODO")
        }

        // to test deleteUser
        should("test deleteUser") {
            // uncomment below to test deleteUser
            //val login : kotlin.String = login_example // kotlin.String | 
            //apiInstance.deleteUser(login)
        }

        // to test getAllUsers
        should("test getAllUsers") {
            // uncomment below to test getAllUsers
            //val page : kotlin.Int = 56 // kotlin.Int | Zero-based page index (0..N)
            //val size : kotlin.Int = 56 // kotlin.Int | The size of the page to be returned
            //val sort : kotlin.collections.MutableList<kotlin.String> =  // kotlin.collections.MutableList<kotlin.String> | Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
            //val result : kotlin.collections.MutableList<AdminUserDTO> = apiInstance.getAllUsers(page, size, sort)
            //result shouldBe ("TODO")
        }

        // to test getUser
        should("test getUser") {
            // uncomment below to test getUser
            //val login : kotlin.String = login_example // kotlin.String | 
            //val result : AdminUserDTO = apiInstance.getUser(login)
            //result shouldBe ("TODO")
        }

        // to test updateUser
        should("test updateUser") {
            // uncomment below to test updateUser
            //val login : kotlin.String = login_example // kotlin.String | 
            //val adminUserDTO : AdminUserDTO =  // AdminUserDTO | 
            //val result : AdminUserDTO = apiInstance.updateUser(login, adminUserDTO)
            //result shouldBe ("TODO")
        }

        // to test updateUser1
        should("test updateUser1") {
            // uncomment below to test updateUser1
            //val adminUserDTO : AdminUserDTO =  // AdminUserDTO | 
            //val result : AdminUserDTO = apiInstance.updateUser1(adminUserDTO)
            //result shouldBe ("TODO")
        }

    }
}
